import { HorizontalBox, VerticalBox, TabWidget, Button, LineEdit} from "std-widgets.slint";

export component TrainControllerUi inherits Window {

    in-out property <string> operation-mode-status: "Automatic";
    in-out property <string> operation-status-message: "";
    in-out property <float> commanded_power: 0.0;
    in-out property <float> authority: 0.0;
    in-out property <float> current_velocity: 0.0;
    in-out property <bool> emergency_brake: false;

    // false = operating
    // true  = failing
    in-out property <bool> engine_status: false;
    in-out property <bool> brake_status: false;
    in-out property <bool> signal_status: false;

    // false = off
    // true  = on
    in-out property<bool> int-lights: false;
    in-out property<bool> ext-lights: false;
    in-out property<bool> right-doors: false;
    in-out property<bool> left-doors: false;


    callback request_automatic_mode();
    callback request_manual_mode();
    callback request_engine_fail();
    callback request_brake_fail();
    callback request_signal_fail();


    preferred-height: 400px;
    min-height: 1000px;
    preferred-width: 300px;
    min-width: 1000px;

    TabWidget {
        Tab {
            title: "Train Controller Home";
            VerticalBox {
                HorizontalBox {
                    VerticalBox {
                        Text {
                            text: root.operation-status-message;
                            max-height: 10px;
                            font-size: 18px;
                            color: red;
                            horizontal-alignment: center;
                        }
                        Button {
                            text: "Automatic";
                            min-width: 10px;
                            min-height: 30px;
                            max-height: 30px;
                            clicked => {
                                root.request_automatic_mode();
                            }
                        }
                        Button {
                            text: "Manual";
                            min-width: 10px;
                            min-height: 30px;
                            max-height: 30px;
                            clicked => {
                                root.request_manual_mode();
                            }
                        }
                        Text {
                            horizontal-alignment: center;
                            text: "Current Operation Mode: \{root.operation-mode-status}";
                            max-height: 10px;
                            font-size: 20px;
                        }
                    }   
                }
                HorizontalBox {
                    Rectangle {
                        border-color: red;
                        border-radius: 20px;
                        border-width: 5px;
                        preferred-height: 250px;
                        preferred-width: 50px;
                        min-height:250px;
                        max-height:250px;
                        max-width: 400px;
                        VerticalBox {
                            spacing: 5px; 
                            // Commanded Power
                            HorizontalBox {
                                Text {
                                    text: "Commanded Power:";
                                    vertical-alignment: center;
                                    font-size: 20px;
                                    width: 250px;
                                }
                                TextInput {
                                    vertical-alignment: center;
                                    text: root.commanded_power;
                                    font-size: 20px;
                                }
                            }
                
                            // Authority
                            HorizontalBox {
                                Text {
                                    text: "Authority:";
                                    vertical-alignment: center;
                                    font-size: 20px;
                                    width: 250px;
                                }
                                TextInput {
                                    vertical-alignment: center;
                                    text: root.authority;
                                    font-size: 20px;
                                }
                            }
                
                            // Current Speed
                            HorizontalBox {
                                Text {
                                    text: "Current Velocity:";
                                    vertical-alignment: center;
                                    font-size: 20px;
                                    width: 250px;
                                }
                                TextInput {
                                    vertical-alignment: center;
                                    text: root.current_velocity;
                                    font-size: 20px;
                                }
                            }
                
                            // Emergency Brake
                            HorizontalBox {
                                Text {
                                    text: "Emergency Brake:";
                                    vertical-alignment: center;
                                    font-size: 20px;
                                    width: 250px;
                                }
                                Button {
                                    text: root.emergency_brake ? "ON" : "OFF";
                                    clicked => {
                                        root.emergency_brake = !root.emergency_brake;
                                    }
                                    width: 100px;
                                    
                                }
                            }
                        }
                    }
                    // buttons for engine failure, brake failure, signal pickup failure
                    HorizontalBox {
                        spacing: 10px;
                        max-height: 200px;
                        VerticalBox {
                            spacing: 10px;
                            Button {
                                height: 230px;
                                text: "Engine Failure";
                                clicked => {
                                    root.request_engine_fail();
                                }
                                width: 160px;
                            }
                            Text {
                                font-size: 17px;
                                horizontal-alignment: center;
                                text:"Engine Status:";
                                max-height: 10px;
                            }
                            Text {
                                font-size: 17px;
                                text: root.engine_status ? "FAILING" : "OPERATIONAL";
                                horizontal-alignment: center;
                            }
                        }
                        VerticalBox {
                            Button {
                                height: 230px;
                                text: "Brake Failure";
                                clicked => {
                                    root.request_brake_fail();
                                }
                                width: 160px;
                            }
                            Text {
                                font-size: 17px;
                                horizontal-alignment: center;
                                text:"Brake Status:";
                                max-height: 10px;
                            }
                            Text {
                                font-size: 17px;
                                text: root.brake_status ? "FAILING" : "OPERATIONAL";
                                horizontal-alignment: center;
                            }
                        }
                        VerticalBox {
                            Button {
                                height: 230px;
                                text: "Signal Pickup Failure";
                                clicked => {
                                    root.request_signal_fail();
                                }
                                width: 160px;
                            }
                            Text {
                                font-size: 17px;
                                horizontal-alignment: center;
                                text:"Signal Pickup Status:";
                                max-height: 10px;
                            }
                            Text {
                                font-size: 17px;
                                text: root.signal_status ? "FAILING" : "OPERATIONAL";
                                horizontal-alignment: center;
                            }
                        }   
                    }  
                }
                // buttons for lights and doors
                VerticalBox {
                    spacing: 10px;

                    // Interior Lights
                    Rectangle {
                        area1 := TouchArea {
                            width: parent.width;
                            height: parent.height;
                            clicked => {
                                root.int-lights = !root.int-lights;
                            }
                        }
                        Text {
                            text: root.int-lights ? "Turn Off Interior Lights" : "Turn On Interior Lights";
                        }
                        background: root.int-lights ? green : red;
                        preferred-height: 20px;
                        max-height: 50px;
                        preferred-width: 60px;
                    }

                    Rectangle {
                        area2 := TouchArea {
                            width: parent.width;
                            height: parent.height;
                            clicked => {
                                root.ext-lights = !root.ext-lights;
                            }
                        }
                        Text {
                            text: root.ext-lights ? "Turn Off Exterior Lights" : "Turn On Exterior Lights";                    
                        }
                        background: root.ext-lights ? green : red;
                        preferred-height: 20px;
                        max-height: 50px;
                        preferred-width: 60px;
                    }

                    Rectangle {
                        area3 := TouchArea {
                            width: parent.width;
                            height: parent.height;
                            clicked => {
                                root.right-doors = !root.right-doors;
                            }
                        }
                        Text {
                            text: root.right-doors ? "Close Right Doors" : "Open Right Doors";
                        }
                        background: root.right-doors ? green : red;
                        preferred-height: 20px;
                        max-height: 50px;
                        preferred-width: 60px;
                    }

                    Rectangle {
                        area4 := TouchArea {
                            width: parent.width;
                            height: parent.height;
                            clicked => {
                                root.left-doors = !root.left-doors;
                            }
                        }
                        Text {
                            text: root.left-doors ? "Close Left Doors" : "Open Left Doors";
                        }
                        background: root.left-doors ? green : red;
                        preferred-height: 20px;
                        max-height: 50px;
                        preferred-width: 60px;
                    }
                }
            }
        }
        Tab {
            title: "TestBench";
        }
    }
}
