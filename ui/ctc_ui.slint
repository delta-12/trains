import { HorizontalBox, Button, GroupBox, Switch, TabWidget, StandardTableView, LineEdit, VerticalBox, StandardListView, ScrollView, ComboBox } from "std-widgets.slint";

component TransitSystem inherits Rectangle {
    background: #252525;
    border-radius: 10px;
    min-height: 200px;
    VerticalLayout {
        HorizontalLayout {
            padding-top: 7px;
            padding-left: 10px;
            Text { 
                text: "Train Schedule";
            }
        }
        ScrollView {
            Text { text: "Line"; } 
            Text { text: "Line"; }
            Text { text: "Line"; }
            Text { text: "Line"; }
            Text { text: "Line"; }
            Text { text: "Line"; }
        }
        
    }
    
}

component TrainSchedule inherits Rectangle {
    background: #252525;
    border-radius: 10px;
    preferred-width: 150px;
    VerticalLayout {
        Rectangle {
            HorizontalLayout {
                padding-top: 7px;
                padding-left: 10px;
                Text { 
                    text: "Train Schedule";
                }
            }
        }
        VerticalLayout {
            padding: 10px;
            StandardTableView {
                width: 300px;
                columns: [
                    { title: @tr("Train") },
                    { title: @tr("ETA") },
                    { title: @tr("DST(s)") },
                ];
                rows: [
                    [ { text: "Item 1.1" }, { text: "Item 1.2" }, { text: "Item 1.3" }, ],
                    [ { text: "Item 2.1" }, { text: "Item 2.2" }, { text: "Item 2.3" }, ],
                    [ { text: "Item 3.1" }, { text: "Item 3.2" }, { text: "Item 3.3" }, ],
                    [ { text: "Item 4.1" }, { text: "Item 4.2" }, { text: "Item 4.3" }, ],
                    [ { text: "Item 5.1" }, { text: "Item 5.2" }, { text: "Item 5.3" }, ],
                    [ { text: "Item 6.1" }, { text: "Item 6.2" }, { text: "Item 6.3" }, ],
                ];
            }
        }
        HorizontalBox {
            vertical-stretch: 1;
            
        }
    }
}

component ManualMode {
    VerticalLayout {
        padding: 10px;
        spacing: 10px;
        HorizontalLayout {
            alignment: start;
            Text { text: "Train Name: ";}
            Rectangle {width: 10px;}
            LineEdit {
                height: 30px;
                placeholder-text: @tr("Train 1");
            } 
        }
        HorizontalLayout {
            alignment: start;
            Text { text: "Destination: ";}
            Rectangle {width: 10px;}
            LineEdit {
                height: 30px;
                placeholder-text: @tr("Downtown");
            } 
        }
        HorizontalLayout {
            alignment: start;
            Text { text: "Arrival Time:";}
            Rectangle {width: 10px;}
            LineEdit {
                height: 30px;
                placeholder-text: @tr("10:00:00");
            } 
        }
        VerticalLayout {
            alignment: end; 
            Button { 
                max-height: 30px;
                preferred-width: 250px;
                text: "DISPATCH";

            } 
        }
    }
}

component AutomaticMode inherits Rectangle {
    in-out property<string> fileName: "";
    callback choose-file();
    callback parse-file();
    VerticalLayout {
        padding: 10px;
        spacing: 10px;
        HorizontalLayout {
            alignment: start;
            Text { text: "Choose File: ";}
            Rectangle {width: 10px;}
            Rectangle {
                border-radius: 5px;
                y: -3px;
                width: 150px;
                height: 25px;
                border-width: 2px;
                border-color: #4d4d4d;
                Text {text: fileName;}
            } 
        }
        HorizontalLayout {
            Button { 
                max-height: 30px;
                text: "Open File";
                clicked => {choose-file()}
            }
        }
        
        VerticalLayout {
            alignment: end; 
            Button { 
                max-height: 30px;
                preferred-width: 250px;
                text: "DISPATCH";
                clicked => {parse-file()}
            } 
        }       
    }
}

component Dispatch inherits Rectangle {
    property <bool> automatic_mode: true;
    in-out property<string> fileName: "";

    callback choose-file();
    callback parse-file();

    background: #252525;
    border-radius: 10px;
    VerticalLayout {
        padding: 10px;
        spacing: 10px;
        alignment: stretch;
        Rectangle {
            // background: red;
            height: 18px;
            HorizontalLayout {
                Text { 
                    text: "Dispatch";
                }
            }
        }
        Rectangle {
            height: 20px;
            // background: green;
            HorizontalLayout {
                spacing: 10px;
                Switch {
                    checked: automatic_mode;
                    toggled => {automatic_mode = !automatic_mode;}
                }
                Text {
                    y: 3px;
                    text: automatic_mode ? "Automatic Mode" : "Manual Mode";
                }
            }
        }

        if(automatic_mode == true) : AutomaticMode {
            choose-file => {root.choose-file()}
            parse-file => {root.parse-file()}
            fileName: fileName;
        }
        if(automatic_mode == false) : ManualMode {}    
    }
}

component TestBench inherits Rectangle {
    HorizontalLayout {
        padding: 15px;
        spacing: 20px;
        Rectangle {
            background: #252525;
            border-radius: 10px;
            VerticalLayout {
                alignment: start;
                padding: 10px;
                padding-left: 15px;
                Text {text: "Inputs";}
                Rectangle {}
                SetOccupancy := VerticalLayout {
                    alignment: start;
                    padding: 10px;
                    spacing: 10px;
                    Text {text: "Track ID:";}
                    ComboBox {
                        model: [@tr("Select Section"), @tr("A"), @tr("B")];
                    }
                    ComboBox {
                        model: [@tr("Select Block Number"), @tr("A"), @tr("B")];
                    }
                    Button {
                        text: "Send Occupancy Signal";
                    }
                }
                Failure := VerticalLayout {
                    alignment: start;
                    padding: 10px;
                    spacing: 10px;
                    Text {text: "Track ID:";}
                    ComboBox {
                        model: [@tr("Select Section"), @tr("A"), @tr("B")];
                    }
                    ComboBox {
                        model: [@tr("Select Block Number"), @tr("A"), @tr("B")];
                    }
                    Button {
                        text: "Send Failure Signal";
                    }
                }
            }
            
        } 
        Rectangle {
            background: #252525;
            border-radius: 10px;
            VerticalLayout {
                alignment: start;
                padding: 10px;
                padding-left: 15px;
                Text {text: "Outputs";}
                SpeedAndAuthority := VerticalLayout {
                    alignment: start;
                    padding: 10px;
                    spacing: 10px;
                    HorizontalLayout {
                        alignment: start;
                        spacing: 10px;
                        Text {text: "Suggested Speed:";}
                        LineEdit {
                            placeholder-text: @tr("m/s");
                        }
                    }
                    HorizontalLayout {
                        alignment: start;
                        spacing: 10px;
                        Text {text: "Authority:";}
                        LineEdit {
                            placeholder-text: @tr("m/s");
                        }
                    }
                    HorizontalLayout {
                        alignment: start;
                        spacing: 10px;
                        Text {text: "Dwell Time:";}
                        LineEdit {
                            placeholder-text: @tr("m/s");
                        }
                    }
                }
                MaintenanceModeAndSwitchState := VerticalLayout {
                    alignment: start;
                    padding: 10px;
                    spacing: 10px;
                    Text {text: "Track ID:";}
                    ComboBox {
                        model: [@tr("Select Section"), @tr("A"), @tr("B")];
                    }
                    Text {text: "Track Block:";}
                    ComboBox {
                        model: [@tr("Select Block Number"), @tr("A"), @tr("B")];
                    }
                    Button {
                        text: "Send Maintenance Mode Signal";
                    }
                    Button {
                        text: "Send Switch State Signal";
                    }
                }
            }
        }    
    }
}

export component CtcUi inherits Window {
    in-out property <string> selected_fileName;
    callback choose-file();
    callback parse-file();
    callback on_test_clicked();

    title: "CTC Office";
    preferred-width: 600px;
    preferred-height: 500px;
    TabWidget {
        Tab {
            title: @tr("CTC Home");
            
            VerticalLayout {
                padding: 15px;
                spacing: 15px;
                alignment: stretch;
                TransitSystem {

                } // Transit System Top Widget
                HorizontalLayout { // Bottom Widget Containing Train Schedule and Dispatch
                    spacing: 15px;
                    alignment: stretch;
                    TrainSchedule {}
                    Dispatch { // Bottom Right Dispatch
                        fileName: selected_fileName;
                        choose-file => {root.choose-file();}
                        parse-file => {root.parse-file()}
                    }
                }   
            }
        }
        Tab {
            title: @tr("Test Bench");
            TestBench {
            }
        }
    }
    
}


